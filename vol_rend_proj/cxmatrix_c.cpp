//
// C Implemtation: cxmatrix_c
//
// Description: 
//
//
// Author: Hongfeng Yu <hfyu@ucdavis.edu>, (C) 2006
//
// Copyright: See COPYING file that comes with this distribution
//
//

#include "cxmatrix_c.h"

int inverse_mat(const double a[16], double b[16])
{

#define a(i,j) (a[(i-1)*4 + (j-1)])
#define b(i,j) (b[(i-1)*4 + (j-1)])

    double detA =  
            a(1,1)*a(2,2)*a(3,3)*a(4,4) + a(1,1)*a(2,3)*a(3,4)*a(4,2)
          + a(1,1)*a(2,4)*a(3,2)*a(4,3)
          + a(1,2)*a(2,1)*a(3,4)*a(4,3) + a(1,2)*a(2,3)*a(3,1)*a(4,4)
          + a(1,2)*a(2,4)*a(3,3)*a(4,1)
          + a(1,3)*a(2,1)*a(3,2)*a(4,4) + a(1,3)*a(2,2)*a(3,4)*a(4,1)
          + a(1,3)*a(2,4)*a(3,1)*a(4,2)
          + a(1,4)*a(2,1)*a(3,3)*a(4,2) + a(1,4)*a(2,2)*a(3,1)*a(4,3) 
          + a(1,4)*a(2,3)*a(3,2)*a(4,1)
          - a(1,1)*a(2,2)*a(3,4)*a(4,3) - a(1,1)*a(2,3)*a(3,2)*a(4,4)
          - a(1,1)*a(2,4)*a(3,3)*a(4,2)
          - a(1,2)*a(2,1)*a(3,3)*a(4,4) - a(1,2)*a(2,3)*a(3,4)*a(4,1)
          - a(1,2)*a(2,4)*a(3,1)*a(4,3)
          - a(1,3)*a(2,1)*a(3,4)*a(4,2) - a(1,3)*a(2,2)*a(3,1)*a(4,4)
          - a(1,3)*a(2,4)*a(3,2)*a(4,1)
          - a(1,4)*a(2,1)*a(3,2)*a(4,3) - a(1,4)*a(2,2)*a(3,3)*a(4,1)
          - a(1,4)*a(2,3)*a(3,1)*a(4,2);

    if (detA == 0)
        return -1;

    b(1,1) = 
     (a(2,2)*a(3,3)*a(4,4) + a(2,3)*a(3,4)*a(4,2) + a(2,4)*a(3,2)*a(4,3)
    - a(2,2)*a(3,4)*a(4,3) - a(2,3)*a(3,2)*a(4,4) -a(2,4)*a(3,3)*a(4,2))/detA;
    
    b(1,2) = 
     (a(1,2)*a(3,4)*a(4,3) + a(1,3)*a(3,2)*a(4,4) + a(1,4)*a(3,3)*a(4,2)
    - a(1,2)*a(3,3)*a(4,4) - a(1,3)*a(3,4)*a(4,2) - a(1,4)*a(3,2)*a(4,3))/detA;
    
    b(1,3) = 
     (a(1,2)*a(2,3)*a(4,4) + a(1,3)*a(2,4)*a(4,2) + a(1,4)*a(2,2)*a(4,3)
    - a(1,2)*a(2,4)*a(4,3) - a(1,3)*a(2,2)*a(4,4) - a(1,4)*a(2,3)*a(4,2))/detA;
    
    b(1,4) = 
     (a(1,2)*a(2,4)*a(3,3) + a(1,3)*a(2,2)*a(3,4) + a(1,4)*a(2,3)*a(3,2) 
    - a(1,2)*a(2,3)*a(3,4) - a(1,3)*a(2,4)*a(3,2) - a(1,4)*a(2,2)*a(3,3))/detA;
    
    b(2,1) = 
     (a(2,1)*a(3,4)*a(4,3) + a(2,3)*a(3,1)*a(4,4) + a(2,4)*a(3,3)*a(4,1) 
    - a(2,1)*a(3,3)*a(4,4) - a(2,3)*a(3,4)*a(4,1) - a(2,4)*a(3,1)*a(4,3))/detA;
    
    b(2,2) = 
     (a(1,1)*a(3,3)*a(4,4) + a(1,3)*a(3,4)*a(4,1) + a(1,4)*a(3,1)*a(4,3) 
    - a(1,1)*a(3,4)*a(4,3) - a(1,3)*a(3,1)*a(4,4) - a(1,4)*a(3,3)*a(4,1))/detA;
    
    b(2,3) = 
     (a(1,1)*a(2,4)*a(4,3) + a(1,3)*a(2,1)*a(4,4) + a(1,4)*a(2,3)*a(4,1) 
    - a(1,1)*a(2,3)*a(4,4) - a(1,3)*a(2,4)*a(4,1) - a(1,4)*a(2,1)*a(4,3))/detA;
    
    b(2,4) = 
     (a(1,1)*a(2,3)*a(3,4) + a(1,3)*a(2,4)*a(3,1) + a(1,4)*a(2,1)*a(3,3) 
    - a(1,1)*a(2,4)*a(3,3) - a(1,3)*a(2,1)*a(3,4) - a(1,4)*a(2,3)*a(3,1))/detA;
    
    b(3,1) = 
     (a(2,1)*a(3,2)*a(4,4) + a(2,2)*a(3,4)*a(4,1) + a(2,4)*a(3,1)*a(4,2) 
    - a(2,1)*a(3,4)*a(4,2) - a(2,2)*a(3,1)*a(4,4) - a(2,4)*a(3,2)*a(4,1))/detA;
    
    b(3,2) = 
     (a(1,1)*a(3,4)*a(4,2) + a(1,2)*a(3,1)*a(4,4) + a(1,4)*a(3,2)*a(4,1) 
    - a(1,1)*a(3,2)*a(4,4) - a(1,2)*a(3,4)*a(4,1) - a(1,4)*a(3,1)*a(4,2))/detA;
    
    b(3,3) = 
     (a(1,1)*a(2,2)*a(4,4) + a(1,2)*a(2,4)*a(4,1) + a(1,4)*a(2,1)*a(4,2) 
    - a(1,1)*a(2,4)*a(4,2) - a(1,2)*a(2,1)*a(4,4) - a(1,4)*a(2,2)*a(4,1))/detA;
    
    b(3,4) = 
     (a(1,1)*a(2,4)*a(3,2) + a(1,2)*a(2,1)*a(3,4) + a(1,4)*a(2,2)*a(3,1) 
    - a(1,1)*a(2,2)*a(3,4) - a(1,2)*a(2,4)*a(3,1) - a(1,4)*a(2,1)*a(3,2))/detA;
    
    b(4,1) = 
     (a(2,1)*a(3,3)*a(4,2) + a(2,2)*a(3,1)*a(4,3) + a(2,3)*a(3,2)*a(4,1) 
    - a(2,1)*a(3,2)*a(4,3) - a(2,2)*a(3,3)*a(4,1) - a(2,3)*a(3,1)*a(4,2))/detA;
    
    b(4,2) = 
     (a(1,1)*a(3,2)*a(4,3) + a(1,2)*a(3,3)*a(4,1) + a(1,3)*a(3,1)*a(4,2)
    - a(1,1)*a(3,3)*a(4,2) - a(1,2)*a(3,1)*a(4,3) - a(1,3)*a(3,2)*a(4,1))/detA;
    
    b(4,3) = 
     (a(1,1)*a(2,3)*a(4,2) + a(1,2)*a(2,1)*a(4,3) + a(1,3)*a(2,2)*a(4,1) 
    - a(1,1)*a(2,2)*a(4,3) - a(1,2)*a(2,3)*a(4,1) - a(1,3)*a(2,1)*a(4,2))/detA;
    
    b(4,4) = 
     (a(1,1)*a(2,2)*a(3,3) + a(1,2)*a(2,3)*a(3,1) + a(1,3)*a(2,1)*a(3,2) 
    - a(1,1)*a(2,3)*a(3,2) - a(1,2)*a(2,1)*a(3,3) - a(1,3)*a(2,2)*a(3,1))/detA;

    return 0;
}
